{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","activeTabId","find","tab","id","className","map","classNames","href","onClick","title","content","defaultId","App","useState","setSelectedTabId","tabIndex","findIndex","item","ReactDOM","render","document","getElementById"],"mappings":"0MAEaA,EAAO,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cACpCC,GACDH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,IAAIM,GAE5D,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBACEE,UAAWE,IAAW,CAAE,YAAaJ,EAAIC,KAAOH,IAChD,UAAQ,MAFV,SAKE,mBACEO,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,WACHN,EAAIC,KAAOH,GACbD,EAAcG,IALpB,SASGA,EAAIO,SAXFP,EAAIC,WAkBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGP,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOH,KAAaU,cC1BrCb,G,kBAAO,CAClB,CAAEM,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,iBAGpCC,EAAYd,EAAK,GAAGM,GAEbS,EAAM,WACjB,MAA0CC,mBAASF,GAAnD,mBAAOb,EAAP,KAAsBgB,EAAtB,KAQA,OACE,sBAAKV,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,6BAEGP,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAAeW,SAG9C,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAAeA,EACfC,cAhBkB,SAACG,GACvB,IAAMa,EAAWlB,EAAKmB,WAAU,SAAAC,GAAI,OAAIA,EAAKd,KAAOD,EAAIC,MAExDW,EAAiBC,GAAY,EAAIb,EAAIC,GAAKQ,UClB9CO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7345f037.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }) => {\n  const activeTabId\n    = (tabs.find(tab => tab.id === selectedTabId) || tabs[0]).id;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={classNames({ 'is-active': tab.id === activeTabId })}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (tab.id !== activeTabId) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => tab.id === activeTabId).content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Tabs } from './components/Tabs';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst defaultId = tabs[0].id;\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(defaultId);\n\n  const onSelectedTabId = (tab) => {\n    const tabIndex = tabs.findIndex(item => item.id === tab.id);\n\n    setSelectedTabId(tabIndex >= 0 ? tab.id : defaultId);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is `}\n        {tabs.find(tab => tab.id === selectedTabId).title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onSelectedTabId}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}